{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x5FE3eF7Ad240e38C6219Ed8a98FD187C8c787B31",
      "txHash": "0x4b04f117d2eba6b31e7d80abf57a0902331a03c9dc15cb24f7ee235011452a37",
      "kind": "uups"
    },
    {
      "address": "0xF2E3A334cd1069225eE401272b3D78C54a5e3505",
      "txHash": "0xaa3b0c98c89bbb7e887083e84894a87bbc5efaef16ee858ab21f470202b35c09",
      "kind": "uups"
    },
    {
      "address": "0x7b72d32742b7C2Fa2064bA3B60daf9f8750abDd2",
      "txHash": "0x203448fedb33be85863233e67ef66e1934824d4d19683758ce43b9ec7f3b4f2e",
      "kind": "uups"
    }
  ],
  "impls": {
    "6172ff7f60c4493c9bcade75d21505d704f6ea60385e45f51318da356d847fe6": {
      "address": "0xC1252dDE7707729a388FaE8ab2dd417e17b6154c",
      "txHash": "0xbaa6604d28a0d4a12fa2d2b09cc076cd42231a357d16bfb6ae31d93d80786222",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol:38"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "351",
            "type": "t_struct(Counter)2929_storage",
            "contract": "KinetexRewards",
            "src": "contracts/KinetexRewards.sol:24"
          },
          {
            "label": "baseURI",
            "offset": 0,
            "slot": "352",
            "type": "t_string_storage",
            "contract": "KinetexRewards",
            "src": "contracts/KinetexRewards.sol:28"
          },
          {
            "label": "contractMetadataURI",
            "offset": 0,
            "slot": "353",
            "type": "t_string_storage",
            "contract": "KinetexRewards",
            "src": "contracts/KinetexRewards.sol:29"
          },
          {
            "label": "_attributesByTokenId",
            "offset": 0,
            "slot": "354",
            "type": "t_mapping(t_uint256,t_struct(Attributes)5649_storage)",
            "contract": "KinetexRewards",
            "src": "contracts/KinetexRewards.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "355",
            "type": "t_array(t_uint256)96_storage",
            "contract": "KinetexRewards",
            "src": "contracts/KinetexRewards.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)96_storage": {
            "label": "uint256[96]",
            "numberOfBytes": "3072"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(Level)6195": {
            "label": "enum Levels.Level",
            "members": [
              "DUST",
              "GEM",
              "CRYSTAL",
              "LIGHTNING"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Attributes)5649_storage)": {
            "label": "mapping(uint256 => struct IKinetexRewards.Attributes)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Attributes)5649_storage": {
            "label": "struct IKinetexRewards.Attributes",
            "members": [
              {
                "label": "level",
                "type": "t_enum(Level)6195",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "dust",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)2929_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "02a25ab72778add46a3f726794420ad2fadb4bf2bbac847bbc954c6e3411c6ff": {
      "address": "0x47774E33c36dE1bf63acE20A1232f89A8eE63A08",
      "txHash": "0xed0478051544d0ffd512a12008fec18d708ecbf14c123b8027df59297fcf1c9a",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "kinetexRewards",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(IKinetexRewards)5694",
            "contract": "KinetexCrafting",
            "src": "contracts/crafting/KinetexCrafting.sol:14"
          },
          {
            "label": "kinetexRewardsAddress",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "KinetexCrafting",
            "src": "contracts/crafting/KinetexCrafting.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)98_storage",
            "contract": "KinetexCrafting",
            "src": "contracts/crafting/KinetexCrafting.sol:17"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)98_storage": {
            "label": "uint256[98]",
            "numberOfBytes": "3136"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IKinetexRewards)5694": {
            "label": "contract IKinetexRewards",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c5a11145ac497fb9aaf2d27c532ebdaf925417b57e2764a17aad03b182432e38": {
      "address": "0x059Ad4813aF41E13548e12Be9A067AA459ac8D65",
      "txHash": "0xa4cb0175df6927ce5cb3242021fde404573780600eacd671069cef467436e8de",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "_rewardsToken",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "KinetexStaking",
            "src": "contracts/staking/KinetexStaking.sol:26"
          },
          {
            "label": "_nftCollection",
            "offset": 0,
            "slot": "302",
            "type": "t_address",
            "contract": "KinetexStaking",
            "src": "contracts/staking/KinetexStaking.sol:27"
          },
          {
            "label": "_rewardTokenDecimals",
            "offset": 0,
            "slot": "303",
            "type": "t_uint256",
            "contract": "KinetexStaking",
            "src": "contracts/staking/KinetexStaking.sol:47"
          },
          {
            "label": "stakers",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_address,t_struct(Staker)6458_storage)",
            "contract": "KinetexStaking",
            "src": "contracts/staking/KinetexStaking.sol:49"
          },
          {
            "label": "stakerAddress",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "KinetexStaking",
            "src": "contracts/staking/KinetexStaking.sol:50"
          },
          {
            "label": "tokenIdToArrayIndex",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "KinetexStaking",
            "src": "contracts/staking/KinetexStaking.sol:51"
          },
          {
            "label": "tokenIdToStakingCondition",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_uint256,t_struct(StakingCondition)6471_storage)",
            "contract": "KinetexStaking",
            "src": "contracts/staking/KinetexStaking.sol:52"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_uint256)98_storage",
            "contract": "KinetexStaking",
            "src": "contracts/staking/KinetexStaking.sol:57"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)98_storage": {
            "label": "uint256[98]",
            "numberOfBytes": "3136"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_struct(Staker)6458_storage)": {
            "label": "mapping(address => struct KinetexStaking.Staker)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(StakingCondition)6471_storage)": {
            "label": "mapping(uint256 => struct KinetexStaking.StakingCondition)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Staker)6458_storage": {
            "label": "struct KinetexStaking.Staker",
            "members": [
              {
                "label": "stakedTokenIds",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "timeOfLastUpdate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "votingPower",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "unclaimedRewards",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "claimedRewards",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(StakingCondition)6471_storage": {
            "label": "struct KinetexStaking.StakingCondition",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "endTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalRewards",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "unclaimedRewards",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "claimedRewards",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
